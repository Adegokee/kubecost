# Production-specific Kubecost configuration
# These values override the base values.yaml for production environment

# Production resource allocation - Higher limits for production workloads
kubecostModel:
  resources:
    requests:
      cpu: "500m"
      memory: "1Gi"
    limits:
      cpu: "2000m"
      memory: "4Gi"

# Enable ETL for production data processing
kubecostModel:
  etl: true
  etlBucketConfigSecret: "kubecost-object-store"
  warmCache: true
  warmSavingsCache: true

# Production frontend resources
kubecostFrontend:
  resources:
    requests:
      cpu: "200m"
      memory: "256Mi"
    limits:
      cpu: "500m"
      memory: "512Mi"

# Production persistence - Larger storage for production data
persistentVolume:
  enabled: true
  size: "50Gi"
  storageClass: "fast-ssd"  # Use high-performance storage
  accessModes:
    - ReadWriteOnce

# Production PostgreSQL configuration
postgresql:
  enabled: true
  auth:
    postgresPassword: "CHANGE-THIS-PRODUCTION-PASSWORD"  # Use proper secret management
    database: "kubecost_prod"
    username: "postgres"
  primary:
    resources:
      requests:
        cpu: "200m"
        memory: "512Mi"
      limits:
        cpu: "1000m"
        memory: "2Gi"
    persistence:
      enabled: true
      size: "30Gi"
      storageClass: "fast-ssd"

# Production Grafana configuration
grafana:
  enabled: true
  persistence:
    enabled: true
    size: 15Gi
    storageClass: "fast-ssd"
  resources:
    requests:
      cpu: "200m"
      memory: "256Mi"
    limits:
      cpu: "500m"
      memory: "1Gi"
  adminPassword: "CHANGE-THIS-PRODUCTION-PASSWORD"  # Use proper secret management

# Production ingress with SSL and authentication
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # Production rate limiting - Higher limits
    nginx.ingress.kubernetes.io/rate-limit-connections: "25"
    nginx.ingress.kubernetes.io/rate-limit-rps: "15"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
  hosts:
    - host: kubecost-prod.yourdomain.com  # CHANGE TO YOUR PRODUCTION DOMAIN
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: kubecost-prod-tls
      hosts:
        - kubecost-prod.yourdomain.com  # CHANGE TO YOUR PRODUCTION DOMAIN

# Enable network costs for production (configure for your cloud provider)
networkCosts:
  enabled: true
  config:
    services:
      - service: "amazon-web-services"
        enabled: true  # Set to true if using AWS
      - service: "azure"
        enabled: false  # Set to true if using Azure
      - service: "google-cloud-platform"
        enabled: false  # Set to true if using GCP

# Production monitoring configuration
serviceMonitor:
  enabled: true
  additionalLabels:
    prometheus: kube-prometheus
    environment: production
    tier: platform

# Enable budget alerts for production cost control
budgetAlertsEnabled: true

# Production security contexts
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1001
  fsGroup: 1001
  seccompProfile:
    type: RuntimeDefault

# Production node affinity - Deploy on dedicated platform nodes
affinity:
  nodeAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        preference:
          matchExpressions:
            - key: node-role.kubernetes.io/platform
              operator: In
              values: ["true"]
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values: ["amd64"]
  
  # Pod anti-affinity for high availability
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values: ["kubecost"]
          topologyKey: kubernetes.io/hostname

# Production tolerations (if using dedicated nodes)
tolerations:
  - key: "dedicated"
    operator: "Equal"
    value: "platform"
    effect: "NoSchedule"

# Production priority class
priorityClassName: "system-cluster-critical"

# Production cost allocation configuration
costAnalyzerConfig:
  currencyCode: "USD"
  
  # Configure for your cloud provider
  customPricing:
    enabled: false
  
  # AWS configuration (uncomment and configure if using AWS)
  # awsServiceKeyName: "aws-service-key"
  # awsServiceKeySecret: "aws-secret"
  
  # Azure configuration (uncomment and configure if using Azure)
  # azureSubscriptionID: "your-subscription-id"
  # azureServiceKeyName: "azure-service-key"
  # azureServiceKeySecret: "azure-secret"
  
  # GCP configuration (uncomment and configure if using GCP)
  # gcpServiceKeyName: "gcp-service-key"
  # gcpServiceKeySecret: "gcp-secret"

# Production aggregator configuration
kubecostAggregator:
  enabled: true
  aggregatorDbStorage: 25Gi