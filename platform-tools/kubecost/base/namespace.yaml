apiVersion: v1
kind: Namespace
metadata:
  name: kubecost
  labels:
    name: kubecost
    app.kubernetes.io/name: kubecost
    app.kubernetes.io/part-of: platform-tools
    app.kubernetes.io/managed-by: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubecost-cost-analyzer
  namespace: kubecost
  labels:
    app.kubernetes.io/name: kubecost
    app.kubernetes.io/part-of: platform-tools
    app.kubernetes.io/managed-by: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "1"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubecost-cost-analyzer
  labels:
    app.kubernetes.io/name: kubecost
    app.kubernetes.io/part-of: platform-tools
    app.kubernetes.io/managed-by: argocd
rules:
  # Core resources for cost allocation
  - apiGroups: [""]
    resources: ["configmaps", "deployments", "nodes", "pods", "services", "resourcequotas", "replicationcontrollers", "limitranges", "persistentvolumes", "persistentvolumeclaims", "namespaces", "endpoints"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions"]
    resources: ["daemonsets", "deployments", "replicasets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["statefulsets", "deployments", "daemonsets", "replicasets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["batch"]
    resources: ["cronjobs", "jobs"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["autoscaling"]
    resources: ["horizontalpodautoscalers"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["policy"]
    resources: ["poddisruptionbudgets"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  # Metrics access
  - apiGroups: ["metrics.k8s.io"]
    resources: ["nodes", "pods"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubecost-cost-analyzer
  labels:
    app.kubernetes.io/name: kubecost
    app.kubernetes.io/part-of: platform-tools
    app.kubernetes.io/managed-by: argocd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubecost-cost-analyzer
subjects:
  - kind: ServiceAccount
    name: kubecost-cost-analyzer
    namespace: kubecost
---
# Network Policy to allow Kubecost communication
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: kubecost-network-policy
  namespace: kubecost
  labels:
    app.kubernetes.io/name: kubecost
    app.kubernetes.io/part-of: platform-tools
    app.kubernetes.io/managed-by: argocd
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: kubecost
  policyTypes:
    - Ingress
    - Egress
  ingress:
    # Allow ingress from ingress controller
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
      ports:
        - protocol: TCP
          port: 9090
    # Allow monitoring access
    - from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP
          port: 9003
  egress:
    # Allow egress to Kubernetes API
    - to:
        - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 443
    # Allow egress to Prometheus
    - to:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP
          port: 9090
    # Allow DNS resolution
    - to:
        - namespaceSelector:
            matchLabels:
              name: kube-system
      ports:
        - protocol: UDP
          port: 53