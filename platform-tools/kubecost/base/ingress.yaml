---
# Ingress for Kubecost UI with authentication
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kubecost-ingress
  namespace: kubecost
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    # Nginx ingress controller annotations
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    
    # Authentication using oauth2-proxy (adjust based on your auth setup)
    nginx.ingress.kubernetes.io/auth-url: "https://oauth2-proxy.auth.svc.cluster.local/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://oauth2-proxy.auth.svc.cluster.local/oauth2/start?rd=$escaped_request_uri"
    nginx.ingress.kubernetes.io/auth-response-headers: "x-auth-request-user,x-auth-request-email,x-auth-request-preferred-username"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-rps: "5"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: ws:";
    
    # TLS certificate management
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/acme-challenge-type: http01
  
  labels:
    app.kubernetes.io/name: kubecost
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: platform-tools

spec:
  ingressClassName: nginx
  
  # TLS configuration
  tls:
    - hosts:
        - kubecost.yourdomain.com  # Replace with your actual domain
      secretName: kubecost-tls-secret
  
  # Routing rules
  rules:
    - host: kubecost.yourdomain.com  # Replace with your actual domain
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kubecost-cost-analyzer
                port:
                  number: 9090

---
# Alternative ingress without authentication for internal access (optional)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kubecost-internal-ingress
  namespace: kubecost
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    # Internal-only access
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
  
  labels:
    app.kubernetes.io/name: kubecost
    app.kubernetes.io/component: internal-ingress
    app.kubernetes.io/part-of: platform-tools

spec:
  ingressClassName: nginx-internal  # Use different ingress class for internal
  
  # Routing rules for internal access
  rules:
    - host: kubecost-internal.local  # Internal domain
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: kubecost-cost-analyzer
                port:
                  number: 9090

---
# Service for Kubecost (if not created by Helm chart)
apiVersion: v1
kind: Service
metadata:
  name: kubecost-cost-analyzer-additional
  namespace: kubecost
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    prometheus.io/scrape: "true"
    prometheus.io/port: "9003"
    prometheus.io/path: "/metrics"
  labels:
    app.kubernetes.io/name: kubecost
    app.kubernetes.io/component: cost-analyzer
    app.kubernetes.io/part-of: platform-tools
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9090
      targetPort: 9090
      protocol: TCP
    - name: metrics
      port: 9003
      targetPort: 9003
      protocol: TCP
  selector:
    app.kubernetes.io/name: cost-analyzer
    app.kubernetes.io/instance: kubecost